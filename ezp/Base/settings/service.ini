## Service(s) settings
#
# Services allows the kernel to be extended without having to hack or rely on autoload overrides,
# it's a low level extension point. All services (except the Repository?) should implement interfaces
# specific to the intended service to be able to be used as dependencies for other services.
#
# By using the configuration system it makes it possible to override settings for services or
# the implementation of the service itself depending on request (access matching) and loaded extensions.
# For this reasons services should probably not be used before configuration and request matching is done.
# (last two sentences tries to reflect use when an mvc stack is part of ezp-next)
#
# Example use cases for mailer service:
# - When you want to change settings in certain siteaccess or override it globally
#   [mail]
#   arguments[default_sender]=admin@example.com
#
# - When you want to change implementation in certain siteaccess or override it globally
#   [mail]
#   class=<A different mail class implementing a mail service interface>
#
# - When you want to change to use a different implementation for a specific service (newsletter)
#   [newsletter]
#   arguments[mail]=@tracking_mail
#
#   [tracking_mail]
#   class=<A different mail class implementing a mail service interface>
#   (...)

#### Services definition
## Each service defines it's own configuration section
# [<service-name>]
## The service needs to be a class
# class=<className>
## Optional a factory method can be specified, it will then be used instead of "new <className>( <arguments> )"
# factory=<methodName>
## Optional define dependencies (arguments), either as scalar values, if prepended with "@" another service
## or if prepended with "$" a variable ($_SERVER, $_COOKIE, $_FILES, $_REQUEST or $serviceContainer)
# arguments[<optionalIdentifier>]=<argument>
#
# TODO: Consider removing factory and introduce 'extends=@<service>' for reusing arguments settings across
#       services that share the same constructor (or extends its signature).



[repository]
class=ezp\Base\Repository
arguments[persistence_handler]=@persistence_handler
arguments[io_handler]=@io_handler

[persistence_handler]
# Interface: eZ\Publish\SPI\Persistence\Handler
# Needs to be defined by extension providing repository handlers atm like "Persistence Handler" example bellow.
class=eZ\Publish\SPI\Persistence\Storage\InMemory\Handler

[io_handler]
# Interface: ezp\Io\Handler
#class=ezp\Io\Storage\InMemory
class=ezp\Io\Storage\Legacy


## Example for setting up Legacy Persistence Handler (Storage Engine):
#[persistence_handler]
#class=eZ\Publish\SPI\Persistence\Storage\Legacy\Handler
#arguments[config][dsn]=<driver>://<username>:<password>@<host>:<port>/<database>
#arguments[config][defer_type_update]=false
#arguments[config][external_storage][ezauthor]=\eZ\Publish\SPI\Persistence\Storage\Legacy\Content\FieldValue\Converter\NullStorage
#arguments[config][external_storage][ezbinaryfile]=\eZ\Publish\SPI\Persistence\Storage\Legacy\Content\FieldValue\Converter\BinaryFileStorage
#arguments[config][external_storage][ezboolean]=\eZ\Publish\SPI\Persistence\Storage\Legacy\Content\FieldValue\Converter\NullStorage
#arguments[config][external_storage][ezcountry]=\eZ\Publish\SPI\Persistence\Storage\Legacy\Content\FieldValue\Converter\NullStorage
#arguments[config][external_storage][ezdatetime]=\eZ\Publish\SPI\Persistence\Storage\Legacy\Content\FieldValue\Converter\NullStorage
#arguments[config][external_storage][ezemail]=\eZ\Publish\SPI\Persistence\Storage\Legacy\Content\FieldValue\Converter\NullStorage
#arguments[config][external_storage][ezfloat]=\eZ\Publish\SPI\Persistence\Storage\Legacy\Content\FieldValue\Converter\NullStorage
#arguments[config][external_storage][ezimage]=\eZ\Publish\SPI\Persistence\Storage\Legacy\Content\FieldValue\Converter\ImageStorage
#arguments[config][external_storage][ezinteger]=\eZ\Publish\SPI\Persistence\Storage\Legacy\Content\FieldValue\Converter\NullStorage
#arguments[config][external_storage][ezkeyword]=\eZ\Publish\SPI\Persistence\Storage\Legacy\Content\FieldValue\Converter\KeywordStorage
#arguments[config][external_storage][ezmedia]=\eZ\Publish\SPI\Persistence\Storage\Legacy\Content\FieldValue\Converter\MediaStorage
#arguments[config][external_storage][ezobjectrelationlist]=\eZ\Publish\SPI\Persistence\Storage\Legacy\Content\FieldValue\Converter\ObjectRelationListStorage
#arguments[config][external_storage][ezpage]=\eZ\Publish\SPI\Persistence\Storage\Legacy\Content\FieldValue\Converter\NullStorage
#arguments[config][external_storage][ezselection]=\eZ\Publish\SPI\Persistence\Storage\Legacy\Content\FieldValue\Converter\NullStorage
#arguments[config][external_storage][ezstring]=\eZ\Publish\SPI\Persistence\Storage\Legacy\Content\FieldValue\Converter\NullStorage
#arguments[config][external_storage][ezsrrating]=\eZ\Publish\SPI\Persistence\Storage\Legacy\Content\FieldValue\Converter\NullStorage
#arguments[config][external_storage][eztext]=\eZ\Publish\SPI\Persistence\Storage\Legacy\Content\FieldValue\Converter\NullStorage
#arguments[config][external_storage][ezurl]=\eZ\Publish\SPI\Persistence\Storage\Legacy\Content\FieldValue\Converter\UrlStorage
#arguments[config][external_storage][ezuser]=\eZ\Publish\SPI\Persistence\Storage\Legacy\Content\FieldValue\Converter\NullStorage
#arguments[config][external_storage][ezxmltext]=eZ\Publish\SPI\Persistence\Storage\Legacy\Content\FieldValue\Converter\NullStorage
#arguments[config][field_converter][ezauthor]=\eZ\Publish\SPI\Persistence\Storage\Legacy\Content\FieldValue\Converter\TextLine
#arguments[config][field_converter][ezbinaryfile]=\eZ\Publish\SPI\Persistence\Storage\Legacy\Content\FieldValue\Converter\BinaryFile
#arguments[config][field_converter][ezboolean]=\eZ\Publish\SPI\Persistence\Storage\Legacy\Content\FieldValue\Converter\CheckBox
#arguments[config][field_converter][ezcountry]=\eZ\Publish\SPI\Persistence\Storage\Legacy\Content\FieldValue\Converter\Country
#arguments[config][field_converter][ezdatetime]=\eZ\Publish\SPI\Persistence\Storage\Legacy\Content\FieldValue\Converter\Integer
#arguments[config][field_converter][ezemail]=\eZ\Publish\SPI\Persistence\Storage\Legacy\Content\FieldValue\Converter\TextLine
#arguments[config][field_converter][ezfloat]=\eZ\Publish\SPI\Persistence\Storage\Legacy\Content\FieldValue\Converter\Float
#arguments[config][field_converter][ezimage]=\eZ\Publish\SPI\Persistence\Storage\Legacy\Content\FieldValue\Converter\Image
#arguments[config][field_converter][ezinteger]=\eZ\Publish\SPI\Persistence\Storage\Legacy\Content\FieldValue\Converter\Integer
#arguments[config][field_converter][ezkeyword]=\eZ\Publish\SPI\Persistence\Storage\Legacy\Content\FieldValue\Converter\Keyword
#arguments[config][field_converter][ezmedia]=\eZ\Publish\SPI\Persistence\Storage\Legacy\Content\FieldValue\Converter\Media
#arguments[config][field_converter][ezobjectrelationlist]=\eZ\Publish\SPI\Persistence\Storage\Legacy\Content\FieldValue\Converter\ObjectRelationList
#arguments[config][field_converter][ezpage]=\eZ\Publish\SPI\Persistence\Storage\Legacy\Content\FieldValue\Converter\TextLine
#arguments[config][field_converter][ezselection]=\eZ\Publish\SPI\Persistence\Storage\Legacy\Content\FieldValue\Converter\Selection
#arguments[config][field_converter][ezstring]=\eZ\Publish\SPI\Persistence\Storage\Legacy\Content\FieldValue\Converter\TextLine
#arguments[config][field_converter][ezsrrating]=\eZ\Publish\SPI\Persistence\Storage\Legacy\Content\FieldValue\Converter\Rating
#arguments[config][field_converter][eztext]=\eZ\Publish\SPI\Persistence\Storage\Legacy\Content\FieldValue\Converter\TextLine
#arguments[config][field_converter][ezurl]=\eZ\Publish\SPI\Persistence\Storage\Legacy\Content\FieldValue\Converter\Url
#arguments[config][field_converter][ezuser]=\eZ\Publish\SPI\Persistence\Storage\Legacy\Content\FieldValue\Converter\Integer
#arguments[config][field_converter][ezxmltext]=eZ\Publish\SPI\Persistence\Storage\Legacy\Content\FieldValue\Converter\XmlText


## Example for setting up Dispatcher Io Handler (Binary Storage Engine):
## 'Dispatcher' makes it possible to use different handlers based on matching rules
#[io_handler]
#class=ezp\Io\Storage\Dispatcher
#arguments[config][default]=@io_handler_legacy
#arguments[config][amazonS3][handler]=@io_handler_amazonS3
#arguments[config][amazonS3][suffix]=.gif,.jpg
#arguments[config][amazonS3][prefix]=var/original/
#arguments[config][amazonS3][contains]=image-versioned

#[io_handler_legacy]
#class=ezp\Io\Storage\Legacy

#[io_handler_amazonS3]
#class=<s3-class-implementing:ezp\Io\Handler>
#arguments[config][user]=<user>
#arguments[config][password]=<password>
#arguments[config][host]=<host>