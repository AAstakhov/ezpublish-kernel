# Base module settings


#### Services definition
## Each service defines it's own configuration section
# [service_<name>]
## The service needs to be a class
# class=<className>
## Optional a factory method can be specified, it will then be used instead of "new <className>( <arguments> )"
# factory=<methodName>
## Optional define dependencies (arguments), either as scalar values, if prepended with "@" another service
## or if prepended with "$" a variable ($_SERVER, $_COOKIE, $_FILES, $_REQUEST or $serviceContainer)
# arguments[<optionalIdentifier>]=<argument>



[service_repository]
class=ezp\Base\Repository
arguments[repository_handler]=@repository_handler
arguments[io_handler]=@io_handler

[service_repository_handler]
# Needs to be defined by extension providing repository handlers atm like bellow
class=ezp\Persistence\Storage\InMemory\RepositoryHandler

[service_io_handler]
#class=ezp\Io\BinaryStorage\InMemory
class=ezp\Io\BinaryStorage\Legacy


#[service_repository_handler]
#class=ezp\Persistence\Storage\Legacy\RepositoryHandler
#arguments[config][dsn]=<driver>://<username>:<password>@<host>:<port>/<database>
#arguments[config][defer_type_update]=false
#arguments[config][external_storages][<fieldTypeIdentifier>]=<classForExternalStorage>
#arguments[config][field_converter][<fieldTypeIdentifier>]=<fieldTypeClass>
